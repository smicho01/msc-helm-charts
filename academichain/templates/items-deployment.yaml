apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-items
  labels:
    app: {{ .Chart.Name }}-items
spec:
  replicas: {{ .Values.items_service.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-items
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-items
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}-items
          image: "{{ .Values.items_service.repository }}:{{ .Values.items_service.tag }}"
          imagePullPolicy: {{ .Values.items_service.pullPolicy }}
          ports:
            - containerPort: {{ .Values.items_service.service.port }}
          env:
            - name: POSTGRESHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESHOST
            - name: POSTGRESPORT
              value: {{ .Values.env.POSTGRESPORT | quote }}
            - name: POSTGRESUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESUSER
            - name: POSTGRESPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESPASSWORD
            - name: POSTGRESDB
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESDB
            - name: CORE_SERVICE_URL
              value: "http://{{ .Chart.Name }}-core:{{ .Values.core_service.service.port }}"
            - name: USER_SERVICE_URL
              value: "http://{{ .Chart.Name }}-users:{{ .Values.users_service.service.port }}"
            - name: KEYCLOAK_URL
              value: http://sever3d.synology.me:7080
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: sever3d.synology.me:8097,sever3d.synology.me:8098,sever3d.synology.me:8099
            - name: NLP_SERVICE_URI
              value: http://semicorp.org:9050
            - name: NLP_SERVICE_TOKEN
              value: 2hE#4Wr7EPGappqYeSu&iFZca9nW!tdjfqHzxv#vP^mB
          resources:
            requests:
              memory: '128Mi'
              cpu: '200m'
            limits:
              memory: '512Mi'
              cpu: '1000m'
      initContainers:
        - name: database-migration
          image: sever3d/academichain-item-database:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRESHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESHOST
            - name: POSTGRESPORT
              value: {{ .Values.env.POSTGRESPORT | quote }}
            - name: POSTGRESUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESUSER
            - name: POSTGRESPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESPASSWORD
            - name: POSTGRESDB
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: POSTGRESDB
          args:
            - "--url=jdbc:postgresql://$(POSTGRESHOST):$(POSTGRESPORT)/$(POSTGRESDB)"
            - "--username=$(POSTGRESUSER)"
            - "--password=$(POSTGRESPASSWORD)"
            - "--changeLogFile=changelog/db.changelog-main.yml"
            - "--liquibaseSchemaName=items"
            - "update"

